<?xml version="1.0" encoding="UTF-8"?>
<Project>
<!--    <Import Project="$(MSBuildThisFileDirectory)Xamarin.iOS.Common.targets"
            Condition="Exists('$(MSBuildThisFileDirectory)Xamarin.iOS.Common.targets') And '$(IsTheAppPajamaClientProject)' != 'true' " />

    <Import Project="$(MSBuildThisFileDirectory)Xamarin.iOS.WatchApp.Common.targets"
            Condition="Exists('$(MSBuildThisFileDirectory)Xamarin.iOS.WatchApp.Common.targets') And '$(IsTheAppPajamaClientProject)' != 'true' " />

    
    <Import Project="$(MSBuildThisFileDirectory)Microsoft.Common.targets"
            Condition="Exists('$(MSBuildThisFileDirectory)Microsoft.Common.targets') And '$(IsTheAppPajamaClientProject)' != 'true' " />-->


   <!--     <Import Project="$(MSBuildThisFileDirectory)Xamarin.iOS.Common.targets"/>-->

    <PropertyGroup>
        <BuildDebug>true</BuildDebug>
    </PropertyGroup>

 

    
    <!-- TODO not sure how these will affect things -->
    <Target Name="CleanProjectsConfig" 
        AfterTargets="Clean" 
        Condition=" '$(IsTheAppPajamaClientProject)' == 'true' ">
        <CleanProjectsConfig Debug="$(BuildDebug)" PackagesDir="$(PackagesDir)" ProjectDir="$(MSBuildProjectDirectory)">
        </CleanProjectsConfig>
    </Target>
    <Target Name="CleanAssetCatalogues" 
        AfterTargets="Clean" 
        Condition="'$(TargetFrameworkIdentifier)' == 'Xamarin.iOS' And '$(IsTheAppPajamaClientProject)' == 'true'">
        <CleanAssetCatalogues Debug="$(BuildDebug)" PackagesDir="$(PackagesDir)" ProjectDir="$(MSBuildProjectDirectory)" TargetsDir="$(MSBuildThisFileDirectory)">
        </CleanAssetCatalogues>
    </Target>


    
    <Target Name="LoadLocalBuildConfig" 
        BeforeTargets="_GetReferenceAssemblyPaths;_BeforeCoreCompileInterfaceDefinitions" 
        Condition=" '$(IsTheAppPajamaClientProject)' != 'true' ">
        <LoadLocalBuildConfig Debug="$(BuildDebug)" ProjectName="$(MSBuildProjectName)" BuildConfiguration="$(Configuration)" PackagesDir="$(PackagesDir)" ProjectDir="$(MSBuildProjectDirectory)" TargetFrameworkIdentifier='$(TargetFrameworkIdentifier)'>
            <Output TaskParameter="BuildResourceDir" PropertyName="BuildResourceDir" />
            <Output TaskParameter="PackagingOutput" ItemName="PackagingFields" />
            <Output TaskParameter="AppIconOutput" ItemName="AppIconFields" />
            <Output TaskParameter="AssetCatalogueName" PropertyName="AssetCatalogueName"/>
            <Output TaskParameter="AppIconCatalogueName" PropertyName="AppIconCatalogueName"/>
            <Output TaskParameter="SplashOutput" ItemName="SplashFields" />
            <Output TaskParameter="NeedsLoadRemote" PropertyName="NeedsLoadRemote" />
        </LoadLocalBuildConfig>

    </Target>

        <Target Name="BuildPath" 
        BeforeTargets="LoadLocalBuildConfig" 
        Condition="'$(BuildDebug)' == 'True' And '$(IsTheAppPajamaClientProject)' != 'true'">
        <Warning Text="MSBuildBinPath: $(MSBuildBinPath)" />
        <Warning Text="$(IsTheAppPajamaClientProject" />
        <Warning Text="MSBuildExtensionsPath: $(MSBuildExtensionsPath)" />
        </Target>
    
    <Target Name="LoadRemoteBuildConfig" 
        AfterTargets="LoadLocalBuildConfig" 
        Condition="'$(NeedsLoadRemote)' == 'True' And '$(IsTheAppPajamaClientProject)' != 'true'">
        <LoadRemoteBuildConfig Debug="$(BuildDebug)" ProjectName="$(MSBuildProjectName)" BuildConfiguration="$(Configuration)" PackagesDir="$(PackagesDir)" ProjectDir="$(MSBuildProjectDirectory)" TargetFrameworkIdentifier='$(TargetFrameworkIdentifier)'>
            <Output TaskParameter="BuildResourceDir" PropertyName="BuildResourceDir" />
            <Output TaskParameter="PackagingOutput" ItemName="PackagingFields" />
            <Output TaskParameter="AppIconOutput" ItemName="AppIconFields" />
            <Output TaskParameter="AssetCatalogueName" PropertyName="AssetCatalogueName"/>
            <Output TaskParameter="AppIconCatalogueName" PropertyName="AppIconCatalogueName"/>
            <Output TaskParameter="Token" PropertyName="BuildAccessToken"/>
            <Output TaskParameter="BuildAppId" PropertyName="BuildAppId" />
            <Output TaskParameter="SplashOutput" ItemName="SplashFields" />
        </LoadRemoteBuildConfig>
    </Target>
    
    <Target Name="DeleteUnusedMediaFiles" 
        AfterTargets="LoadRemoteBuildConfig"
        Condition=" '$(IsTheAppPajamaClientProject)' != 'true' ">
        <DeleteUnusedMediaFiles Debug="$(BuildDebug)" 
            ProjectDir="$(MSBuildProjectDirectory)" 
            PackagesDir="$(PackagesDir)" 
            AppIconFields="@(AppIconFields)" 
            SplashFields="@(SplashFields)" 
            BuildConfiguration="$(Configuration)">
            <Output TaskParameter="FilesToDeleteFromProject" ItemName="FilesToDeleteFromProject" />
            
        </DeleteUnusedMediaFiles>
    </Target>
    
    <Target Name="DownloadMediaFiles" 
        AfterTargets="DeleteUnusedMediaFiles"
        Condition=" '$(IsTheAppPajamaClientProject)' != 'true' ">
        <DownloadMediaFiles 
            Debug="$(BuildDebug)" 
            BuildAppId="$(BuildAppId)" 
            ProjectDir="$(MSBuildProjectDirectory)" 
            Token="$(BuildAccessToken)" 
            PackagesDir="$(PackagesDir)" 
            AppIconFields="@(AppIconFields)" 
            SplashFields="@(SplashFields)" 
            BuildConfiguration="$(Configuration)"
            FilesToDeleteFromProject="@(FilesToDeleteFromProject)">
        </DownloadMediaFiles>
    </Target>
    
    <Target Name="SetDroidManifest" 
        AfterTargets="DownloadMediaFiles" 
        Condition="'$(TargetFrameworkIdentifier)' == 'MonoAndroid' And '$(IsTheAppPajamaClientProject)' != 'true'">
        <SetDroidManifest Debug="$(BuildDebug)" ProjectDir="$(MSBuildProjectDirectory)" PackagingFields="@(PackagingFields)" AndroidManifest="$(AndroidManifest)">
        </SetDroidManifest>
    </Target>
    
    <Target Name="SetDroidAppIcons" 
        AfterTargets="SetDroidManifest" 
        Condition="'$(TargetFrameworkIdentifier)' == 'MonoAndroid' And '$(IsTheAppPajamaClientProject)' != 'true'">
        <SetDroidAppIcons Debug="$(BuildDebug)" 
            BuildConfiguration="$(Configuration)" 
            PackagesDir="$(PackagesDir)" 
            ProjectDir="$(MSBuildProjectDirectory)" 
            AppIconFields="@(AppIconFields)"
            ExistingAndroidResources="@(AndroidResource)">
            <Output TaskParameter="OutputAndroidAssets" ItemName="AndroidAppIcons" />    
            <Output TaskParameter="TheAppsPajamasResourceDir" PropertyName="TheAppsPajamasResourceDir" />
            <Output TaskParameter="FilesToAddToProject" ItemName="FilesToAddToProject" />
        </SetDroidAppIcons>

        <ItemGroup>
            <AndroidResource Remove="$(TheAppsPajamasResourceDir)/**"/>
        </ItemGroup>

       <ItemGroup>
            <AndroidResource Include="%(AndroidAppIcons.Identity)"/>
        </ItemGroup>
    </Target>

    <Target Name="SetIosPlist" 
        AfterTargets="DownloadMediaFiles" 
        Condition="'$(TargetFrameworkIdentifier)' == 'Xamarin.iOS' And '$(IsTheAppPajamaClientProject)' != 'true'">
        <SetIosPlist Debug="$(BuildDebug)" 
            PackagesDir="$(PackagesDir)" 
            ProjectDir="$(MSBuildProjectDirectory)" 
            PackagingFields="@(PackagingFields)" 
            IosPlist="$(_AppManifest)">
            </SetIosPlist>

    </Target>


    <Target Name="SetIosAppIcons" 
        AfterTargets="SetIosPlist" 
        Condition="'$(TargetFrameworkIdentifier)' == 'Xamarin.iOS' And '$(IsTheAppPajamaClientProject)' != 'true'">
        <SetIosAppIcons Debug="$(BuildDebug)" 
            BuildConfiguration="$(Configuration)" 
            PackagesDir="$(PackagesDir)" 
            ProjectDir="$(MSBuildProjectDirectory)" 
            AppIconFields="@(AppIconFields)" 
            AssetCatalogueName="$(AssetCatalogueName)" 
            AppIconCatalogueName="$(AppIconCatalogueName)"
            ExistingiTunesArtworks="@(iTunesArtwork)"
            ExistingImageAssets="@(ImageAsset)"
            PackagesOutputDir="$(MSBuildThisFileDirectory)">
            <Output TaskParameter="OutputImageAssets" ItemName="IosAppIcons" />            
            <Output TaskParameter="OutputITunesArtwork" ItemName="IosITunesArtwork" />    
            <Output TaskParameter="TheAppsPajamasResourceDir" PropertyName="TheAppsPajamasResourceDir" />

            
            <Output TaskParameter="FilesToAddToProject" ItemName="FilesToAddToProject" />
        </SetIosAppIcons>
        

        <ItemGroup>
            <ImageAsset Remove="$(AssetCatalogueName)/**"/>
            <ImageAsset Remove="$(TheAppsPajamasResourceDir)/**"/>
            <ITunesArtwork Remove="**"/>
        </ItemGroup>

       <ItemGroup>
            <ImageAsset Include="%(IosAppIcons.Identity)"/>
            <ITunesArtwork Include="%(IosITunesArtwork.Identity)" />
        </ItemGroup>

    </Target>

    <Target Name="ModifyProject" 
        AfterTargets="SetIosAppIcons" 
           Condition=" '$(IsTheAppPajamaClientProject)' != 'true' ">
           <ModifyProject Debug="$(BuildDebug)" 
            PackagesDir="$(PackagesDir)" 
            ProjectDir="$(MSBuildProjectDirectory)" 
            ProjectFileLoad="$(MSBuildProjectFullPath)"
            FilesToAddToProject="@(FilesToAddToProject)">
            <Output TaskParameter="ProjectFileSave" PropertyName="ModifiedProjectFullPath"/>

            <Output TaskParameter="ProjectShouldModifyOriginal" PropertyName="ProjectShouldModifyOriginal"/>

        </ModifyProject>

    </Target>

<!--    <Target Name="BuildModifiedProject" 
        AfterTargets="ModifyProject"
        Condition=" '$(IsTheAppPajamaClientProject)' != 'true' ">

        <Warning Text="resolved assemblies @(ResolvedUserAssemblies)"/>
        
        <MSBuild Projects="$(ModifiedProjectFullPath)" Targets="Rebuild" StopOnFirstFailure="True" Properties="IsTheAppPajamaClientProject=true;Configuration=$(Configuration)" />

    </Target>    -->

<!--    <Target Name="AddResourceBackIntoModifedProject" 
        AfterTargets="ModifyProject"
        Condition=" '$(IsTheAppPajamaClientProject)' != 'true' And $(ProjectShouldModifyOriginal) == 'True' ">
        <AddResourceBackIntoModifedProject Debug="$(BuildDebug)" 
            PackagesDir="$(PackagesDir)" 
            ProjectDir="$(MSBuildProjectDirectory)" 
            ProjectFileModifiedName="$(ModifiedProjectFullPath)">

        </AddResourceBackIntoModifedProject>
    </Target>-->

    <!-- TODO we can roll this back into modify project -->
    <Target Name="SaveModifiedProjectBackToProject" 
        AfterTargets="ModifyProject"
        Condition=" '$(IsTheAppPajamaClientProject)' != 'true' And $(ProjectShouldModifyOriginal) == 'True' ">
        <SaveModifiedProjectBackToProject Debug="$(BuildDebug)" PackagesDir="$(PackagesDir)" ProjectDir="$(MSBuildProjectDirectory)" 
            ProjectFileOriginalName="$(MSBuildProjectFullPath)"
            ProjectFileModifiedName="$(ModifiedProjectFullPath)">

        </SaveModifiedProjectBackToProject>
    </Target>   

    
</Project>